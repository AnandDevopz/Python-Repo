import boto3

# Replace 'your_access_key' and 'your_secret_key' with your AWS credentials
aws_access_key_id = 'your_access_key'
aws_secret_access_key = 'your_secret_key'
region_name = 'us-east-1'  # Replace with your desired AWS region

# Create a Boto3 S3 client
s3 = boto3.client('s3', aws_access_key_id=aws_access_key_id,
                  aws_secret_access_key=aws_secret_access_key, region_name=region_name)

def create_bucket(bucket_name):
    try:
        s3.create_bucket(Bucket=bucket_name)
        print(f"Created S3 bucket: {bucket_name}")
    except Exception as e:
        print(f"Error creating bucket: {str(e)}")

def list_buckets():
    try:
        response = s3.list_buckets()
        print("S3 Buckets:")
        for bucket in response['Buckets']:
            print(f"- {bucket['Name']}")
    except Exception as e:
        print(f"Error listing buckets: {str(e)}")

def upload_file(bucket_name, file_name, object_name):
    try:
        s3.upload_file(file_name, bucket_name, object_name)
        print(f"Uploaded {file_name} to {bucket_name}/{object_name}")
    except Exception as e:
        print(f"Error uploading file: {str(e)}")

def list_objects(bucket_name):
    try:
        response = s3.list_objects_v2(Bucket=bucket_name)
        print(f"Objects in {bucket_name}:")
        for obj in response.get('Contents', []):
            print(f"- {obj['Key']}")
    except Exception as e:
        print(f"Error listing objects: {str(e)}")

def download_object(bucket_name, object_name, local_file_name):
    try:
        s3.download_file(bucket_name, object_name, local_file_name)
        print(f"Downloaded {object_name} to {local_file_name}")
    except Exception as e:
        print(f"Error downloading object: {str(e)}")

def delete_object(bucket_name, object_name):
    try:
        s3.delete_object(Bucket=bucket_name, Key=object_name)
        print(f"Deleted {object_name} from {bucket_name}")
    except Exception as e:
        print(f"Error deleting object: {str(e)}")

def delete_bucket(bucket_name):
    try:
        s3.delete_bucket(Bucket=bucket_name)
        print(f"Deleted S3 bucket: {bucket_name}")
    except Exception as e:
        print(f"Error deleting bucket: {str(e)}")

if __name__ == "__main__":
    while True:
        print("\nMenu:")
        print("1. Create an S3 bucket")
        print("2. List all S3 buckets")
        print("3. Upload a file to an S3 bucket")
        print("4. List objects in an S3 bucket")
        print("5. Download an object from an S3 bucket")
        print("6. Delete an object from an S3 bucket")
        print("7. Delete an S3 bucket")
        print("8. Quit")
        choice = input("Enter your choice (1/2/3/4/5/6/7/8): ")

        if choice == '1':
            bucket_name = input("Enter the bucket name to create: ")
            create_bucket(bucket_name)
        elif choice == '2':
            list_buckets()
        elif choice == '3':
            bucket_name = input("Enter the bucket name to upload to: ")
            file_name = input("Enter the local file path to upload: ")
            object_name = input("Enter the object name in the bucket: ")
            upload_file(bucket_name, file_name, object_name)
        elif choice == '4':
            bucket_name = input("Enter the bucket name to list objects from: ")
            list_objects(bucket_name)
        elif choice == '5':
            bucket_name = input("Enter the bucket name to download from: ")
            object_name = input("Enter the object name to download: ")
            local_file_name = input("Enter the local file path to save the downloaded object: ")
            download_object(bucket_name, object_name, local_file_name)
        elif choice == '6':
            bucket_name = input("Enter the bucket name to delete from: ")
            object_name = input("Enter the object name to delete: ")
            delete_object(bucket_name, object_name)
        elif choice == '7':
            bucket_name = input("Enter the bucket name to delete: ")
            delete_bucket(bucket_name)
        elif choice == '8':
            break
        else:
            print("Invalid choice. Please enter a valid option.")
